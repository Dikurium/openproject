version: "3.7"

networks:
  network:

volumes:
  pgdata:
  tmp:
  opdata:
  bundle:
  npm:

x-op-restart-policy: &restart_policy
  restart: unless-stopped
x-op-build: &build
  context: .
  dockerfile: ./docker/dev/backend/Dockerfile
  args:
    DEV_UID: $DEV_UID
    DEV_GID: $DEV_GID
x-op-image: &image
  image:
    openproject/dev:latest
x-op-frontend-build: &frontend-build
  context: .
  dockerfile: ./docker/dev/frontend/Dockerfile
  args:
    DEV_UID: $DEV_UID
    DEV_GID: $DEV_GID
x-op-backend: &backend
  build:
    <<: *build
    target: develop
  <<: *image
  <<: *restart_policy
  environment:
    LOCAL_DEV_CHECK: "${LOCAL_DEV_CHECK:?The docker-compose file for OpenProject has moved to https://github.com/opf/openproject-deploy}"
    RAILS_ENV: development
    RAILS_CACHE_STORE: file_store
    OPENPROJECT_CACHE__MEMCACHE__SERVER: cache:11211
    OPENPROJECT_RAILS__RELATIVE__URL__ROOT: "${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}"
    DATABASE_URL: postgresql://${DB_USERNAME:-postgres}:${DB_PASSWORD:-postgres}@${DB_HOST:-db}:${DB_PORT:-5432}/${DB_DATABASE:-openproject}
    OPENPROJECT_EDITION: $OPENPROJECT_EDITION
  volumes:
    - ".:/home/dev/openproject"
    - "opdata:/var/openproject/assets"
    - "bundle:/usr/local/bundle"
    - "tmp:/home/dev/openproject/tmp"
  networks:
    - network

services:
  backend:
    <<: *backend
    tty: true
    stdin_open: true
    command: run-app
    ports:
      - "3000:3000"
    depends_on:
      - db
      - cache

  worker:
    <<: *backend
    command: bundle exec rake jobs:work
    depends_on:
      - db
      - cache

  frontend:
    build:
      <<: *frontend-build
    command: "npm run serve"
    volumes:
      - ".:/home/dev/openproject"
      - "${CKEDITOR_BUILD_DIR:-./frontend/src/vendor/ckeditor/}:/home/dev/openproject/frontend/src/vendor/ckeditor/"
    ports:
      - "4200:4200"
      - "9999:9999"
    environment:
      PROXY_HOSTNAME: backend
    networks:
      - network
    depends_on:
      - backend

  db:
    image: postgres:13
    <<: *restart_policy
    stop_grace_period: "3s"
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_DATABASE:-openproject}
    networks:
      - network

  cache:
    image: memcached
    <<: *restart_policy
    networks:
      - network

######### Testing stuff below ############

# see docker-compose.test.yml
